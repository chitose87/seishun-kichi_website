{"version":3,"file":"index.css","sources":["style/index.scss","style/_util.scss","../bower_components/bourbon/core/_bourbon.scss","../bower_components/bourbon/core/bourbon/helpers/_buttons-list.scss","../bower_components/bourbon/core/bourbon/helpers/_scales.scss","../bower_components/bourbon/core/bourbon/helpers/_text-inputs-list.scss","../bower_components/bourbon/core/bourbon/settings/_settings.scss","../bower_components/bourbon/core/bourbon/validators/_contains.scss","../bower_components/bourbon/core/bourbon/validators/_contains-falsy.scss","../bower_components/bourbon/core/bourbon/validators/_is-color.scss","../bower_components/bourbon/core/bourbon/validators/_is-length.scss","../bower_components/bourbon/core/bourbon/validators/_is-number.scss","../bower_components/bourbon/core/bourbon/validators/_is-size.scss","../bower_components/bourbon/core/bourbon/utilities/_assign-inputs.scss","../bower_components/bourbon/core/bourbon/utilities/_compact-shorthand.scss","../bower_components/bourbon/core/bourbon/utilities/_directional-property.scss","../bower_components/bourbon/core/bourbon/utilities/_fetch-bourbon-setting.scss","../bower_components/bourbon/core/bourbon/utilities/_font-source-declaration.scss","../bower_components/bourbon/core/bourbon/utilities/_gamma.scss","../bower_components/bourbon/core/bourbon/utilities/_lightness.scss","../bower_components/bourbon/core/bourbon/utilities/_contrast-ratio.scss","../bower_components/bourbon/core/bourbon/utilities/_unpack-shorthand.scss","../bower_components/bourbon/core/bourbon/library/_border-color.scss","../bower_components/bourbon/core/bourbon/library/_border-radius.scss","../bower_components/bourbon/core/bourbon/library/_border-style.scss","../bower_components/bourbon/core/bourbon/library/_border-width.scss","../bower_components/bourbon/core/bourbon/library/_buttons.scss","../bower_components/bourbon/core/bourbon/library/_clearfix.scss","../bower_components/bourbon/core/bourbon/library/_contrast-switch.scss","../bower_components/bourbon/core/bourbon/library/_ellipsis.scss","../bower_components/bourbon/core/bourbon/library/_font-face.scss","../bower_components/bourbon/core/bourbon/library/_font-stacks.scss","../bower_components/bourbon/core/bourbon/library/_hide-text.scss","../bower_components/bourbon/core/bourbon/library/_hide-visually.scss","../bower_components/bourbon/core/bourbon/library/_margin.scss","../bower_components/bourbon/core/bourbon/library/_modular-scale.scss","../bower_components/bourbon/core/bourbon/library/_overflow-wrap.scss","../bower_components/bourbon/core/bourbon/library/_padding.scss","../bower_components/bourbon/core/bourbon/library/_position.scss","../bower_components/bourbon/core/bourbon/library/_prefixer.scss","../bower_components/bourbon/core/bourbon/library/_shade.scss","../bower_components/bourbon/core/bourbon/library/_size.scss","../bower_components/bourbon/core/bourbon/library/_strip-unit.scss","../bower_components/bourbon/core/bourbon/library/_text-inputs.scss","../bower_components/bourbon/core/bourbon/library/_timing-functions.scss","../bower_components/bourbon/core/bourbon/library/_tint.scss","../bower_components/bourbon/core/bourbon/library/_triangle.scss","../bower_components/bourbon/core/bourbon/library/_value-prefixer.scss","style/_vars.scss","style/_init.scss","style/_main-visual.scss","style/_pick-up-news.scss","style/_main-contents.scss"],"sourcesContent":["@import \"util\";\r\n@import 'init';\r\n\r\nbody {\r\n\t&:before {\r\n\t\tposition: absolute;\r\n\t\tdisplay: inline-block;\r\n\t\tz-index: 1000;\r\n\t\tfont-size: large;\r\n\t}\r\n\t@include mq-xl {\r\n\t\t&:before {\r\n\t\t\tcontent: \"mq-xl\";\r\n\t\t}\r\n\t}\r\n\t@include mq-md {\r\n\t\t&:before {\r\n\t\t\tcontent: \"mq-md\";\r\n\t\t}\r\n\t}\r\n\t@include mq-tb {\r\n\t\t&:before {\r\n\t\t\tcontent: \"mq-tb\";\r\n\t\t}\r\n\t}\r\n\t@include mq-pc {\r\n\t\t&:before {\r\n\t\t\tbackground-color: red;\r\n\t\t}\r\n\t}\r\n\t@include mq-sp {\r\n\t\t&:before {\r\n\t\t\tcontent: \"mq-sp\";\r\n\t\t\tbackground-color: blue;\r\n\t\t}\r\n\t}\r\n\tfont-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n}\r\n\r\nheader {\r\n\tbackground-color: $color_white;\r\n\tpadding: 0 1rem;\r\n\t.inner {\r\n\t\t@include mq-pc {\r\n\t\t\theight: 5rem;\r\n\t\t}\r\n\t\t@include mq-sp {\r\n\t\t\theight: 2.5rem;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfooter {\r\n\tbackground-color: #6ebbd4;\r\n\t.inner {\r\n\t\t//padding-bottom: 0;\r\n\t\tborder: 0;\r\n\t\tpadding: 0 2rem;\r\n\t\tpadding-top: 1rem;\r\n\t\tmargin-top: 0.2rem;\r\n\t\tcolor: white;\r\n\t\tfont-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n\r\n\t\t.body{\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\tvertical-align: middle;\r\n\t\t\talign-items: center;\r\n\t\t\t.left{\r\n\t\t\t\timg[src=\"https://placehold.jp/150x150.png\"]{\r\n\t\t\t\t\twidth: 30%;\r\n\t\t\t\t\theight: 2rem;\r\n\t\t\t\t\tmargin-bottom: 0.5rem;\r\n\t\t\t\ttext-align: left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t.right{\r\n\t\t\t\ttext-align: right;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.copy{\r\n\t\t\ttext-align: center;\r\n\t\t\tmargin-top: 1rem;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmain {\r\n}\r\n\r\nsection {\r\n\tpadding: 1rem 1rem;\r\n}\r\n\r\n.inner {\r\n\tborder: 1px solid rgba($color_red, 0.8);\r\n\tmax-width: 1160px;\r\n\tmargin: auto;\r\n}\r\n\r\n@import \"main-visual\";\r\n@import \"pick-up-news\";\r\n@import \"main-contents\";\r\n","@import \"../../bower_components/bourbon/core/_bourbon.scss\";\r\n@import \"vars\";\r\n\r\n@mixin mq-xl() {\r\n\t@media (min-width: $content_md+1) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin mq-md() {\r\n\t@media screen and (min-width: $content_tb+1) and (max-width: $content_md) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin mq-tb() {\r\n\t@media screen and (min-width: $content_sp+1) and (max-width: $content_tb) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin mq-pc() {\r\n\t@media screen and (min-width: $content_sp+1) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin mq-sp() {\r\n\t@media screen and (max-width: $content_sp) {\r\n\t\t@content;\r\n\t}\r\n}\r\n\r\n@mixin shadow() {\r\n\tbox-shadow: 0px 5px 30px 0px rgba($color_black, 0.3);\r\n}\r\n\r\n//@mixin mq($size) {\r\n//\t@if $size==sp {\r\n//\t\t@media screen and (max-width: $content_sp) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//\t@if $size==tb {\r\n//\t\t@media screen and (min-width: $content_sp+1) and (max-width: $content_tb) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//\t@if $size==md {\r\n//\t\t@media screen and (min-width: $content_tb+1) and (max-width: $content_md) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//\t@if $size==xl {\r\n//\t\t@media (min-width: $content_md+1) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//\t@if $size==pc {\r\n//\t\t@media screen and (min-width: $content_sp+1) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//}\r\n//\r\n//@mixin mq-above($above) {\r\n//\t@if $above==tb{\r\n//\t\t@media screen and (min-width: $content_sp+1) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//\t@if $above==md{\r\n//\t\t@media screen and (min-width: $content_tb+1) {\r\n//\t\t\t@content;\r\n//\t\t}\r\n//\t}\r\n//}\r\n\r\n","// Bourbon 5.0.0\n// http://bourbon.io\n// Copyright 2011-2018 thoughtbot, inc.\n// MIT License\n\n@import \"bourbon/helpers/buttons-list\";\n@import \"bourbon/helpers/scales\";\n@import \"bourbon/helpers/text-inputs-list\";\n\n@import \"bourbon/settings/settings\";\n\n@import \"bourbon/validators/contains\";\n@import \"bourbon/validators/contains-falsy\";\n@import \"bourbon/validators/is-color\";\n@import \"bourbon/validators/is-length\";\n@import \"bourbon/validators/is-number\";\n@import \"bourbon/validators/is-size\";\n\n@import \"bourbon/utilities/assign-inputs\";\n@import \"bourbon/utilities/compact-shorthand\";\n@import \"bourbon/utilities/directional-property\";\n@import \"bourbon/utilities/fetch-bourbon-setting\";\n@import \"bourbon/utilities/font-source-declaration\";\n@import \"bourbon/utilities/gamma\";\n@import \"bourbon/utilities/lightness\";\n@import \"bourbon/utilities/contrast-ratio\";\n@import \"bourbon/utilities/unpack-shorthand\";\n\n@import \"bourbon/library/border-color\";\n@import \"bourbon/library/border-radius\";\n@import \"bourbon/library/border-style\";\n@import \"bourbon/library/border-width\";\n@import \"bourbon/library/buttons\";\n@import \"bourbon/library/clearfix\";\n@import \"bourbon/library/contrast-switch\";\n@import \"bourbon/library/ellipsis\";\n@import \"bourbon/library/font-face\";\n@import \"bourbon/library/font-stacks\";\n@import \"bourbon/library/hide-text\";\n@import \"bourbon/library/hide-visually\";\n@import \"bourbon/library/margin\";\n@import \"bourbon/library/modular-scale\";\n@import \"bourbon/library/overflow-wrap\";\n@import \"bourbon/library/padding\";\n@import \"bourbon/library/position\";\n@import \"bourbon/library/prefixer\";\n@import \"bourbon/library/shade\";\n@import \"bourbon/library/size\";\n@import \"bourbon/library/strip-unit\";\n@import \"bourbon/library/text-inputs\";\n@import \"bourbon/library/timing-functions\";\n@import \"bourbon/library/tint\";\n@import \"bourbon/library/triangle\";\n@import \"bourbon/library/value-prefixer\";\n","@charset \"UTF-8\";\n\n/// A list of all HTML button elements.\n///\n/// @type list\n///\n/// @access private\n\n$_buttons-list: (\n  \"button\",\n  \"[type='button']\",\n  \"[type='reset']\",\n  \"[type='submit']\",\n);\n","@charset \"UTF-8\";\n\n////\n/// Pre-defined scales for use with the `modular-scale` function.\n///\n/// @type number (unitless)\n///\n/// @see {function} modular-scale\n////\n\n$minor-second:     1.067;\n$major-second:     1.125;\n$minor-third:      1.2;\n$major-third:      1.25;\n$perfect-fourth:   1.333;\n$augmented-fourth: 1.414;\n$perfect-fifth:    1.5;\n$minor-sixth:      1.6;\n$golden:           1.618;\n$major-sixth:      1.667;\n$minor-seventh:    1.778;\n$major-seventh:    1.875;\n$octave:           2;\n$major-tenth:      2.5;\n$major-eleventh:   2.667;\n$major-twelfth:    3;\n$double-octave:    4;\n","@charset \"UTF-8\";\n\n/// A list of all _text-based_ HTML inputs.\n///\n/// @type list\n///\n/// @access private\n\n$_text-inputs-list: (\n  \"[type='color']\",\n  \"[type='date']\",\n  \"[type='datetime']\",\n  \"[type='datetime-local']\",\n  \"[type='email']\",\n  \"[type='month']\",\n  \"[type='number']\",\n  \"[type='password']\",\n  \"[type='search']\",\n  \"[type='tel']\",\n  \"[type='text']\",\n  \"[type='time']\",\n  \"[type='url']\",\n  \"[type='week']\",\n  \"input:not([type])\",\n  \"textarea\",\n);\n","@charset \"UTF-8\";\n\n/// Default global Bourbon settings. Values in this map are overwritten by any\n/// values set in the `$bourbon` map.\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"ttf\", \"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @access private\n\n$_bourbon-defaults: (\n  \"contrast-switch-dark-color\": #000,\n  \"contrast-switch-light-color\": #fff,\n  \"global-font-file-formats\": (\"ttf\", \"woff2\", \"woff\"),\n  \"modular-scale-base\": 1em,\n  \"modular-scale-ratio\": $major-third,\n  \"rails-asset-pipeline\": false,\n);\n\n/// Global Bourbon settings.\n///\n/// @name Settings\n///\n/// @type map\n///\n/// @property {color} contrast-switch-dark-color [#000]\n///   Global dark color for the `contrast-switch` function.\n///\n/// @property {color} contrast-switch-light-color [#fff]\n///   Global light color for the `contrast-switch` function.\n///\n/// @property {list} global-font-file-formats [(\"ttf\", \"woff2\", \"woff\")]\n///   Global font file formats for the `font-face` mixin.\n///\n/// @property {number (with unit)} modular-scale-base [1em]\n///   Global base value for the `modular-scale` function.\n///\n/// @property {number (unitless)} modular-scale-ratio [$major-third (1.25)]\n///   Global base ratio for the `modular-scale` function.\n///\n/// @property {boolean} rails-asset-pipeline [false]\n///   Set this to `true` when using the Rails Asset Pipeline and Bourbon will\n///   write asset paths using\n///   [sass-rails’ asset helpers](https://github.com/rails/sass-rails#asset-helpers).\n///\n/// @example scss\n///   $bourbon: (\n///     \"contrast-switch-dark-color\": #000,\n///     \"contrast-switch-light-color\": #fff,\n///     \"global-font-file-formats\": (\"ttf\", \"woff2\", \"woff\"),\n///     \"modular-scale-base\": 1em,\n///     \"modular-scale-ratio\": $major-third,\n///     \"rails-asset-pipeline\": false,\n///   );\n\n$bourbon: () !default;\n","@charset \"UTF-8\";\n\n/// Checks if a list contains a value(s).\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @argument {list} $values\n///   A single value or list of values to check for.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains(\n  $list,\n  $values...\n) {\n  @each $value in $values {\n    @if type-of(index($list, $value)) != \"number\" {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n","@charset \"UTF-8\";\n\n/// Checks if a list does not contain any values.\n///\n/// @argument {list} $list\n///   The list to check against.\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _contains-falsy($list) {\n  @each $item in $list {\n    @if not $item {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS color.\n///\n/// @argument {string} $color\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-color($color) {\n  @return (type-of($color) == color) or ($color == \"currentColor\");\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS length.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-length($value) {\n  @return type-of($value) != \"null\" and (str-slice($value + \"\", 1, 4) == \"calc\"\n       or index(auto inherit initial 0, $value)\n       or (type-of($value) == \"number\" and not(unitless($value))));\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid number.\n///\n/// @argument {number} $value\n///\n/// @require {function} _contains\n///\n/// @return {boolean}\n///\n/// @access private\n\n@function _is-number($value) {\n  @return _contains(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\" 0 1 2 3 4 5 6 7 8 9, $value);\n}\n","@charset \"UTF-8\";\n\n/// Checks for a valid CSS size.\n///\n/// @argument {string} $value\n///\n/// @return {boolean}\n///\n/// @require {function} _contains\n///\n/// @require {function} _is-length\n///\n/// @access private\n\n@function _is-size($value) {\n  @return _is-length($value)\n          or _contains(\"fill\" \"fit-content\" \"min-content\" \"max-content\", $value);\n}\n","@charset \"UTF-8\";\n\n/// Append pseudo-classes to a selector(s).\n///\n/// @argument {list | string} $inputs\n///   A selector, or list of selectors, to apply the pseudo-class to.\n///\n/// @argument {pseudo-class} $pseudo [null]\n///   The pseudo-class to be appended.\n///\n/// @return {list}\n///\n/// @access private\n\n@function _assign-inputs(\n  $inputs,\n  $pseudo: null\n) {\n  $list: ();\n\n  @each $input in $inputs {\n    $input: unquote($input);\n    $input: if($pseudo, $input + \":\" + $pseudo, $input);\n    $list: append($list, $input, comma);\n  }\n\n  @return $list;\n}\n","@charset \"UTF-8\";\n\n// scss-lint:disable ElsePlacement\n\n/// Transforms shorthand to its shortest possible form.\n///\n/// @argument {list} $values\n///   List of directional values.\n///\n/// @example scss\n///   $values: _compact-shorthand(10px 20px 10px 20px);\n///\n///   // Output\n///   $values: 10px 20px;\n///\n/// @return {list}\n///\n/// @access private\n\n@function _compact-shorthand($values) {\n  $output: null;\n\n  $a: nth($values, 1);\n  $b: if(length($values) < 2, $a, nth($values, 2));\n  $c: if(length($values) < 3, $a, nth($values, 3));\n  $d: if(length($values) < 2, $a, nth($values, if(length($values) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n","@charset \"UTF-8\";\n\n// scss-lint:disable SpaceAroundOperator\n\n/// Builds directional properties by parsing CSS shorthand values. For example,\n/// a value of `10px null` will output top and bottom directional properties,\n/// but the `null` skips left and right from being output.\n///\n/// @argument {string} $property\n///   Base property.\n///\n/// @argument {string} $suffix\n///   Suffix to append. Use `null` to omit.\n///\n/// @argument {list} $values\n///   List of values to set for the property.\n///\n/// @example scss\n///   .element {\n///     @include _directional-property(border, width, null 5px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-right-width: 5px;\n///     border-left-width: 5px;\n///   }\n///\n/// @require {function} _compact-shorthand\n///\n/// @require {function} _contains-falsy\n///\n/// @access private\n\n@mixin _directional-property(\n  $property,\n  $suffix,\n  $values\n) {\n  $top:    $property + \"-top\"    + if($suffix, \"-#{$suffix}\", \"\");\n  $bottom: $property + \"-bottom\" + if($suffix, \"-#{$suffix}\", \"\");\n  $left:   $property + \"-left\"   + if($suffix, \"-#{$suffix}\", \"\");\n  $right:  $property + \"-right\"  + if($suffix, \"-#{$suffix}\", \"\");\n  $all:    $property +             if($suffix, \"-#{$suffix}\", \"\");\n\n  $values: _compact-shorthand($values);\n\n  @if _contains-falsy($values) {\n    @if nth($values, 1) { #{$top}: nth($values, 1); }\n\n    @if length($values) == 1 {\n      @if nth($values, 1) { #{$right}: nth($values, 1); }\n    } @else {\n      @if nth($values, 2) { #{$right}: nth($values, 2); }\n    }\n\n    @if length($values) == 2 {\n      @if nth($values, 1) { #{$bottom}: nth($values, 1); }\n      @if nth($values, 2) { #{$left}: nth($values, 2); }\n    } @else if length($values) == 3 {\n      @if nth($values, 3) { #{$bottom}: nth($values, 3); }\n      @if nth($values, 2) { #{$left}: nth($values, 2); }\n    } @else if length($values) == 4 {\n      @if nth($values, 3) { #{$bottom}: nth($values, 3); }\n      @if nth($values, 4) { #{$left}: nth($values, 4); }\n    }\n  } @else {\n    #{$all}: $values;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Return a Bourbon setting.\n///\n/// @argument {string} $setting\n///\n/// @return {boolean | color | list | number | string}\n///\n/// @example scss\n///   _fetch-bourbon-setting(rails-asset-pipeline)\n///\n/// @access private\n\n@function _fetch-bourbon-setting($setting) {\n  @return map-get(map-merge($_bourbon-defaults, $bourbon), $setting);\n}\n","@charset \"UTF-8\";\n\n/// Builds the `src` list for an `@font-face` declaration.\n///\n/// @link https://goo.gl/Ru1bKP\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {boolean} $asset-pipeline\n///\n/// @argument {list} $file-formats\n///\n/// @return {list}\n///\n/// @require {function} _contains\n///\n/// @access private\n\n@function _font-source-declaration(\n  $font-family,\n  $file-path,\n  $asset-pipeline,\n  $file-formats\n) {\n  $src: ();\n\n  $formats-map: (\n    eot:   \"#{$file-path}.eot?#iefix\" format(\"embedded-opentype\"),\n    woff2: \"#{$file-path}.woff2\" format(\"woff2\"),\n    woff:  \"#{$file-path}.woff\" format(\"woff\"),\n    ttf:   \"#{$file-path}.ttf\" format(\"truetype\"),\n    svg:   \"#{$file-path}.svg##{$font-family}\" format(\"svg\"),\n  );\n\n  @each $key, $values in $formats-map {\n    @if _contains($file-formats, $key) {\n      $file-path: nth($values, 1);\n      $font-format: nth($values, 2);\n\n      @if $asset-pipeline == true {\n        $src: append($src, font-url($file-path) $font-format, comma);\n      } @else {\n        $src: append($src, url($file-path) $font-format, comma);\n      }\n    }\n  }\n\n  @return $src;\n}\n","@charset \"UTF-8\";\n\n/// Performs gamma correction on a single color channel.\n///\n/// Note that Sass does not have a `pow()` function, so the calculation\n/// is approximate.\n///\n/// @argument {number (0-1)} $channel\n///\n/// @return {number (0-1)}\n///\n/// @access private\n\n@function _gamma($channel) {\n  @if $channel < 0.03928 {\n    @return $channel / 12.92;\n  } @else {\n    $c: ($channel + 0.055) / 1.055;\n    @return (133 * $c * $c * $c + 155 * $c * $c) / 288;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines the lightness of a color.\n///\n/// @argument {color (hex)} $hex-color\n///\n/// @return {number (0-1)}\n///\n/// @example scss\n///   _lightness($color)\n///\n/// @access private\n\n@function _lightness($hex-color) {\n  $-local-red-raw: red(rgba($hex-color, 1));\n  $-local-green-raw: green(rgba($hex-color, 1));\n  $-local-blue-raw: blue(rgba($hex-color, 1));\n\n  $-local-red: _gamma($-local-red-raw / 255);\n  $-local-green: _gamma($-local-green-raw / 255);\n  $-local-blue: _gamma($-local-blue-raw / 255);\n\n  @return $-local-red * 0.2126 + $-local-green * 0.7152 + $-local-blue * 0.0722;\n}\n","@charset \"UTF-8\";\n\n/// Programatically determines the contrast ratio between two colors.\n///\n/// Note that the alpha channel is ignored.\n///\n/// @link https://goo.gl/54htLV\n///\n/// @argument {color (hex)} $color-1\n///\n/// @argument {color (hex)} $color-2\n///\n/// @return {number (1-21)}\n///\n/// @example scss\n///   _contrast-ratio(black, white)\n///\n/// @require {function} _lightness\n///\n/// @access private\n\n@function _contrast-ratio($color-1, $color-2) {\n  $-local-lightness-1: _lightness($color-1) + 0.05;\n  $-local-lightness-2: _lightness($color-2) + 0.05;\n\n  @if $-local-lightness-1 > $-local-lightness-2 {\n    @return $-local-lightness-1 / $-local-lightness-2;\n  } @else {\n    @return $-local-lightness-2 / $-local-lightness-1;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Transforms shorthand that can range from 1-to-4 values to be 4 values.\n///\n/// @argument {list} $shorthand\n///\n/// @example scss\n///   .element {\n///     margin: _unpack-shorthand(1em 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin: 1em 2em 1em 2em;\n///   }\n///\n/// @access private\n\n@function _unpack-shorthand($shorthand) {\n  @if length($shorthand) == 1 {\n    @return nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1) nth($shorthand, 1);\n  } @else if length($shorthand) == 2 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 1) nth($shorthand, 2);\n  } @else if length($shorthand) == 3 {\n    @return nth($shorthand, 1) nth($shorthand, 2) nth($shorthand, 3) nth($shorthand, 2);\n  } @else {\n    @return $shorthand;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-color` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of colors; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-color(#a60b55 #76cd9c null #e8ae1a);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-left-color: #e8ae1a;\n///     border-right-color: #76cd9c;\n///     border-top-color: #a60b55;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-color($values) {\n  @include _directional-property(border, color, $values);\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and top-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-top-radius(4px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-top-left-radius: 4px;\n///     border-top-right-radius: 4px;\n///   }\n\n@mixin border-top-radius($radii) {\n  border-top-left-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-right and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-right-radius(3px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-right-radius: 3px;\n///     border-top-right-radius: 3px;\n///   }\n\n@mixin border-right-radius($radii) {\n  border-bottom-right-radius: $radii;\n  border-top-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// bottom-left and bottom-right of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-bottom-radius(2px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 2px;\n///     border-bottom-right-radius: 2px;\n///   }\n\n@mixin border-bottom-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-bottom-right-radius: $radii;\n}\n\n/// Provides a concise, one-line method for setting `border-radius` on both the\n/// top-left and bottom-left of a box.\n///\n/// @argument {number (with unit)} $radii\n///\n/// @example scss\n///   .element {\n///     @include border-left-radius(1px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-left-radius: 1px;\n///     border-top-left-radius: 1px;\n///   }\n\n@mixin border-left-radius($radii) {\n  border-bottom-left-radius: $radii;\n  border-top-left-radius: $radii;\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-style` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border styles; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-style(dashed null solid);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-style: solid;\n///     border-top-style: dashed;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-style($values) {\n  @include _directional-property(border, style, $values);\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `border-width` on specific\n/// edges of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of border widths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include border-width(1em null 20px);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border-bottom-width: 20px;\n///     border-top-width: 1em;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin border-width($values) {\n  @include _directional-property(border, width, $values);\n}\n","@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_buttons-list\n////\n\n/// A list of all HTML button elements. Please note that you must interpolate\n/// the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-buttons} {\n///     background-color: #f00;\n///   }\n///\n///   // CSS Output\n///   button,\n///   [type='button'],\n///   [type='reset'],\n///   [type='submit'] {\n///     background-color: #f00;\n///   }\n\n$all-buttons: _assign-inputs($_buttons-list);\n\n/// A list of all HTML button elements with the `:active` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-active} {\n///     background-color: #00f;\n///   }\n///\n///   // CSS Output\n///   button:active,\n///   [type='button']:active,\n///   [type='reset']:active,\n///   [type='submit']:active {\n///     background-color: #00f;\n///   }\n\n$all-buttons-active: _assign-inputs($_buttons-list, active);\n\n/// A list of all HTML button elements with the `:focus` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-focus} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:focus,\n///   [type='button']:focus,\n///   [type='reset']:focus,\n///   [type='submit']:focus {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-focus: _assign-inputs($_buttons-list, focus);\n\n/// A list of all HTML button elements with the `:hover` pseudo-class applied.\n/// Please note that you must interpolate the variable (`#{}`) to use it as a\n/// selector.\n///\n/// @example scss\n///   #{$all-buttons-hover} {\n///     background-color: #0f0;\n///   }\n///\n///   // CSS Output\n///   button:hover,\n///   [type='button']:hover,\n///   [type='reset']:hover,\n///   [type='submit']:hover {\n///     background-color: #0f0;\n///   }\n\n$all-buttons-hover: _assign-inputs($_buttons-list, hover);\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link https://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n///   // CSS Output\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Switches between two colors based on the contrast to another color. It’s\n/// like a [ternary operator] for color contrast and can be useful for building\n/// a button system.\n///\n/// The calculation of the contrast ratio is based on the [WCAG 2.0\n/// specification]. However, we cannot guarantee full compliance, though all of\n/// our manual testing passed.\n///\n///   [ternary operator]: https://goo.gl/ccfLqi\n///   [WCAG 2.0 specification]: https://goo.gl/zhQuYA\n///\n/// @argument {color} $base-color\n///   The color to evaluate lightness against.\n///\n/// @argument {color} $dark-color [#000]\n///   The color to be output when `$base-color` is light. Can also be set\n///   globally using the `contrast-switch-dark-color` key in the\n///   Bourbon settings.\n///\n/// @argument {color} $light-color [#fff]\n///   The color to be output when `$base-color` is dark. Can also be set\n///   globally using the `contrast-switch-light-color` key in the\n///   Bourbon settings.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     color: contrast-switch(#bae6e6);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     color: #000;\n///   }\n///\n/// @example scss\n///   .element {\n///     $button-color: #2d72d9;\n///     background-color: $button-color;\n///     color: contrast-switch($button-color, #222, #eee);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #2d72d9;\n///     color: #eee;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n///\n/// @require {function} _is-color\n///\n/// @require {function} _contrast-ratio\n///\n/// @since 5.0.0\n\n@function contrast-switch(\n  $base-color,\n  $dark-color: _fetch-bourbon-setting(\"contrast-switch-dark-color\"),\n  $light-color: _fetch-bourbon-setting(\"contrast-switch-light-color\")\n) {\n  @if not _is-color($base-color) {\n    @error \"`#{$base-color}` is not a valid color for the `$base-color` \" +\n           \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($dark-color) {\n    @error \"`#{$dark-color}` is not a valid color for the `$dark-color` \" +\n           \"argument in the `contrast-switch` function.\";\n  } @else if not _is-color($light-color) {\n    @error \"`#{$light-color}` is not a valid color for the `$light-color` \" +\n           \"argument in the `contrast-switch` function.\";\n  } @else {\n    $-contrast-to-dark: _contrast-ratio($base-color, $dark-color);\n    $-contrast-to-light: _contrast-ratio($base-color, $light-color);\n    $-prefer-dark: $-contrast-to-dark >= $-contrast-to-light;\n\n    @return if($-prefer-dark, $dark-color, $light-color);\n  }\n}\n","@charset \"UTF-8\";\n\n/// Truncates text and adds an ellipsis to represent overflow.\n///\n/// @argument {number} $width [100%]\n///   The `max-width` for the string to respect before being truncated.\n///\n/// @argument {string} $display [inline-block]\n///   Sets the display-value of the element.\n///\n/// @example scss\n///   .element {\n///     @include ellipsis;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     display: inline-block;\n///     max-width: 100%;\n///     overflow: hidden;\n///     text-overflow: ellipsis;\n///     white-space: nowrap;\n///     word-wrap: normal;\n///   }\n\n@mixin ellipsis(\n  $width: 100%,\n  $display: inline-block\n) {\n  display: $display;\n  max-width: $width;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  word-wrap: normal;\n}\n","@charset \"UTF-8\";\n\n/// Generates an `@font-face` declaration. You can choose the specific file\n/// formats you need to output; the mixin supports `eot`, `ttf`, `svg`, `woff2`\n/// and `woff`. The mixin also supports usage with the Rails Asset Pipeline,\n/// which you can enable per use, or globally in the `$bourbon()` settings.\n///\n/// @argument {string} $font-family\n///\n/// @argument {string} $file-path\n///\n/// @argument {string} $asset-pipeline [false]\n///   Set to `true` if you’re using the Rails Asset Pipeline (place the fonts\n///   in `app/assets/fonts/`). Can also be set globally using the\n///   `rails-asset-pipeline` key in the Bourbon settings.\n///\n/// @argument {string | list} $file-formats [(\"ttf\", \"woff2\", \"woff\")]\n///   List of the font file formats to include. Can also be set globally using\n///   the `global-font-file-formats` key in the Bourbon settings.\n///\n/// @content\n///   Any additional CSS properties that are included in the `@include`\n///   directive will be output within the `@font-face` declaration, e.g. you can\n///   pass in `font-weight`, `font-style` and/or `unicode-range`.\n///\n/// @example scss\n///   @include font-face(\n///     \"source-sans-pro\",\n///     \"fonts/source-sans-pro-regular\",\n///     (\"woff2\", \"woff\")\n///   ) {\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n///   // CSS Output\n///   @font-face {\n///     font-family: \"source-sans-pro\";\n///     src: url(\"fonts/source-sans-pro-regular.woff2\") format(\"woff2\"),\n///          url(\"fonts/source-sans-pro-regular.woff\") format(\"woff\");\n///     font-style: normal;\n///     font-weight: 400;\n///   }\n///\n/// @require {function} _font-source-declaration\n///\n/// @require {function} _fetch-bourbon-setting\n\n@mixin font-face(\n  $font-family,\n  $file-path,\n  $file-formats: _fetch-bourbon-setting(\"global-font-file-formats\"),\n  $asset-pipeline: _fetch-bourbon-setting(\"rails-asset-pipeline\")\n) {\n  @font-face {\n    font-family: $font-family;\n    src: _font-source-declaration(\n      $font-family,\n      $file-path,\n      $asset-pipeline,\n      $file-formats\n    );\n    @content;\n  }\n}\n","@charset \"UTF-8\";\n\n/// A variable that outputs a Helvetica font stack.\n///\n/// @link https://goo.gl/uSJvZe\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-helvetica;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\n///   }\n\n$font-stack-helvetica: (\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Arial\",\n  sans-serif,\n);\n\n/// A variable that outputs a Lucida Grande font stack.\n///\n/// @link https://goo.gl/R5UyYE\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-lucida-grande;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Lucida Grande\", \"Lucida Sans Unicode\", \"Geneva\", \"Verdana\", sans-serif;\n///   }\n\n$font-stack-lucida-grande: (\n  \"Lucida Grande\",\n  \"Lucida Sans Unicode\",\n  \"Geneva\",\n  \"Verdana\",\n  sans-serif,\n);\n\n/// A variable that outputs a Verdana font stack.\n///\n/// @link https://goo.gl/yGXWSS\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-verdana;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Verdana\", \"Geneva\", sans-serif;\n///   }\n\n$font-stack-verdana: (\n  \"Verdana\",\n  \"Geneva\",\n  sans-serif,\n);\n\n/// A variable that outputs a system font stack.\n///\n/// @link https://goo.gl/LHRZIf\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-system;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: -apple-system, BlinkMacSystemFont, \"Avenir Next\", \"Avenir\", \"Segoe UI\", \"Lucida Grande\", \"Helvetica Neue\", \"Helvetica\", \"Fira Sans\", \"Roboto\", \"Noto\", \"Droid Sans\", \"Cantarell\", \"Oxygen\", \"Ubuntu\", \"Franklin Gothic Medium\", \"Century Gothic\", \"Liberation Sans\", sans-serif;\n///   }\n\n$font-stack-system: (\n  -apple-system,\n  BlinkMacSystemFont,\n  \"Avenir Next\",\n  \"Avenir\",\n  \"Segoe UI\",\n  \"Lucida Grande\",\n  \"Helvetica Neue\",\n  \"Helvetica\",\n  \"Fira Sans\",\n  \"Roboto\",\n  \"Noto\",\n  \"Droid Sans\",\n  \"Cantarell\",\n  \"Oxygen\",\n  \"Ubuntu\",\n  \"Franklin Gothic Medium\",\n  \"Century Gothic\",\n  \"Liberation Sans\",\n  sans-serif,\n);\n\n/// A variable that outputs a Garamond font stack.\n///\n/// @link https://goo.gl/QQFEkV\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-garamond;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Garamond\", \"Baskerville\", \"Baskerville Old Face\", \"Hoefler Text\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-garamond: (\n  \"Garamond\",\n  \"Baskerville\",\n  \"Baskerville Old Face\",\n  \"Hoefler Text\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Georgia font stack.\n///\n/// @link https://goo.gl/wtzVPy\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-georgia;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Georgia\", \"Times\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-georgia: (\n  \"Georgia\",\n  \"Times\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Hoefler Text font stack.\n///\n/// @link https://goo.gl/n7U7zx\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-hoefler-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Hoefler Text\", \"Baskerville Old Face\", \"Garamond\", \"Times New Roman\", serif;\n///   }\n\n$font-stack-hoefler-text: (\n  \"Hoefler Text\",\n  \"Baskerville Old Face\",\n  \"Garamond\",\n  \"Times New Roman\",\n  serif,\n);\n\n/// A variable that outputs a Consolas font stack.\n///\n/// @link https://goo.gl/iKrtqv\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-consolas;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Consolas\", \"monaco\", monospace;\n///   }\n\n$font-stack-consolas: (\n  \"Consolas\",\n  \"monaco\",\n  monospace,\n);\n\n/// A variable that outputs a Courier New font stack.\n///\n/// @link https://goo.gl/bHfWMP\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-courier-new;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Courier New\", \"Courier\", \"Lucida Sans Typewriter\", \"Lucida Typewriter\", monospace;\n///   }\n\n$font-stack-courier-new: (\n  \"Courier New\",\n  \"Courier\",\n  \"Lucida Sans Typewriter\",\n  \"Lucida Typewriter\",\n  monospace,\n);\n\n/// A variable that outputs a Monaco font stack.\n///\n/// @link https://goo.gl/9PgKDO\n///\n/// @type list\n///\n/// @example scss\n///   .element {\n///     font-family: $font-stack-monaco;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-family: \"Monaco\", \"Consolas\", \"Lucida Console\", monospace;\n///   }\n\n$font-stack-monaco: (\n  \"Monaco\",\n  \"Consolas\",\n  \"Lucida Console\",\n  monospace,\n);\n","@charset \"UTF-8\";\n\n/// Hides the text in an element, commonly used to show an image instead. Some\n/// elements will need block-level styles applied.\n///\n/// @link https://goo.gl/EvLRIu\n///\n/// @example scss\n///   .element {\n///     @include hide-text;\n///   }\n///\n///   // CSS Output\n///   .element {\n///     overflow: hidden;\n///     text-indent: 101%;\n///     white-space: nowrap;\n///   }\n\n@mixin hide-text {\n  overflow: hidden;\n  text-indent: 101%;\n  white-space: nowrap;\n}\n","@charset \"UTF-8\";\n\n/// Hides an element visually while still allowing the content to be accessible\n/// to assistive technology, e.g. screen readers. Passing `unhide` will reverse\n/// the affects of the hiding, which is handy for showing the element on focus,\n/// for example.\n///\n/// @link https://goo.gl/Vf1TGn\n///\n/// @argument {string} $toggle [hide]\n///   Accepts `hide` or `unhide`. `unhide` reverses the affects of `hide`.\n///\n/// @example scss\n///   .element {\n///     @include hide-visually;\n///\n///     &:active,\n///     &:focus {\n///       @include hide-visually(\"unhide\");\n///     }\n///   }\n///\n///   // CSS Output\n///   .element {\n///     border: 0;\n///     clip: rect(1px, 1px, 1px, 1px);\n///     clip-path: inset(100%);\n///     height: 1px;\n///     overflow: hidden;\n///     padding: 0;\n///     position: absolute;\n///     width: 1px;\n///   }\n///\n///   .hide-visually:active,\n///   .hide-visually:focus {\n///     clip: auto;\n///     clip-path: none;\n///     height: auto;\n///     overflow: visible;\n///     position: static;\n///     width: auto;\n///   }\n///\n/// @since 5.0.0\n\n@mixin hide-visually($toggle: \"hide\") {\n  @if not index(\"hide\" \"unhide\", $toggle) {\n    @error \"`#{$toggle}` is not a valid value for the `$toggle` argument in \" +\n           \"the `hide-visually` mixin. Must be either `hide` or `unhide`.\";\n  } @else if $toggle == \"hide\" {\n    border: 0;\n    clip: rect(1px, 1px, 1px, 1px);\n    clip-path: inset(100%);\n    height: 1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    white-space: nowrap;\n    width: 1px;\n  } @else if $toggle == \"unhide\" {\n    clip: auto;\n    clip-path: none;\n    height: auto;\n    overflow: visible;\n    position: static;\n    white-space: inherit;\n    width: auto;\n  }\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting `margin` on specific edges\n/// of a box. Use a `null` value to “skip” edges of the box with standard\n/// CSS shorthand.\n///\n/// @argument {list} $values\n///   List of margin values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include margin(null auto);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include margin(10px 3em 20vh null);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-bottom: 20vh;\n///     margin-right: 3em;\n///     margin-top: 10px;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin margin($values) {\n  @include _directional-property(margin, null, $values);\n}\n","@charset \"UTF-8\";\n\n/// Increments up or down a defined scale and returns an adjusted value. This\n/// helps establish consistent measurements and spacial relationships throughout\n/// your project. We provide a list of commonly used scales as\n/// [pre-defined variables][scales].\n///\n/// [scales]: https://github.com/thoughtbot/bourbon/blob/master/core/bourbon/settings/_scales.scss\n///\n/// @argument {number (unitless)} $increment\n///   How many steps to increment up or down the scale.\n///\n/// @argument {number (with unit) | list} $value [1em]\n///   The base value the scale starts at. Can also be set globally using the\n///   `modular-scale-base` key in the Bourbon settings.\n///\n/// @argument {number (unitless)} $ratio [1.25]\n///   The ratio the scale is built on. Can also be set globally using the\n///   `modular-scale-ratio` key in the Bourbon settings.\n///\n/// @return {number (with unit)}\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(2);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.5625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     margin-right: modular-scale(3, 2em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     margin-right: 3.90625em;\n///   }\n///\n/// @example scss\n///   .element {\n///     font-size: modular-scale(3, 1em 1.6em, $major-seventh);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 3em;\n///   }\n///\n/// @example scss\n///   // Globally change the base ratio\n///   $bourbon: (\n///     \"modular-scale-ratio\": 1.2,\n///   );\n///\n///   .element {\n///     font-size: modular-scale(3);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     font-size: 1.728em;\n///   }\n///\n/// @require {function} _fetch-bourbon-setting\n\n@function modular-scale(\n  $increment,\n  $value: _fetch-bourbon-setting(\"modular-scale-base\"),\n  $ratio: _fetch-bourbon-setting(\"modular-scale-ratio\")\n) {\n  $v1: nth($value, 1);\n  $v2: nth($value, length($value));\n  $value: $v1;\n\n  // scale $v2 to just above $v1\n  @while $v2 > $v1 {\n    $v2: ($v2 / $ratio); // will be off-by-1\n  }\n  @while $v2 < $v1 {\n    $v2: ($v2 * $ratio); // will fix off-by-1\n  }\n\n  // check AFTER scaling $v2 to prevent double-counting corner-case\n  $double-stranded: $v2 > $v1;\n\n  @if $increment > 0 {\n    @for $i from 1 through $increment {\n      @if $double-stranded and ($v1 * $ratio) > $v2 {\n        $value: $v2;\n        $v2: ($v2 * $ratio);\n      } @else {\n        $v1: ($v1 * $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @if $increment < 0 {\n    // adjust $v2 to just below $v1\n    @if $double-stranded {\n      $v2: ($v2 / $ratio);\n    }\n\n    @for $i from $increment through -1 {\n      @if $double-stranded and ($v1 / $ratio) < $v2 {\n        $value: $v2;\n        $v2: ($v2 / $ratio);\n      } @else {\n        $v1: ($v1 / $ratio);\n        $value: $v1;\n      }\n    }\n  }\n\n  @return $value;\n}\n","@charset \"UTF-8\";\n\n/// Outputs the `overflow-wrap` property and its legacy name `word-wrap` to\n/// support browsers that do not yet use `overflow-wrap`.\n///\n/// @argument {string} $wrap [break-word]\n///   Accepted CSS values are `normal`, `break-word`, `inherit`, `initial`,\n///   or `unset`.\n///\n/// @example scss\n///   .wrapper {\n///     @include overflow-wrap;\n///   }\n///\n///   // CSS Output\n///   .wrapper {\n///     word-wrap: break-word;\n///     overflow-wrap: break-word;\n///   }\n\n@mixin overflow-wrap($wrap: break-word) {\n  word-wrap: $wrap;\n  overflow-wrap: $wrap;\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise method for targeting `padding` on specific sides of a\n/// box. Use a `null` value to “skip” a side.\n///\n/// @argument {list} $values\n///   List of padding values; accepts CSS shorthand.\n///\n/// @example scss\n///   .element-one {\n///     @include padding(null 1rem);\n///   }\n///\n///   // CSS Output\n///   .element-one {\n///     padding-left: 1rem;\n///     padding-right: 1rem;\n///   }\n///\n/// @example scss\n///   .element-two {\n///     @include padding(10vh null 10px 5%);\n///   }\n///\n///   // CSS Output\n///   .element-two {\n///     padding-bottom: 10px;\n///     padding-left: 5%;\n///     padding-top: 10vh;\n///   }\n///\n/// @require {mixin} _directional-property\n\n@mixin padding($values) {\n  @include _directional-property(padding, null, $values);\n}\n","@charset \"UTF-8\";\n\n/// Provides a concise, one-line method for setting an element’s positioning\n/// properties: `position`, `top`, `right`, `bottom` and `left`. Use a `null`\n/// value to “skip” an edge of the box.\n///\n/// @argument {string} $position\n///   A CSS position value.\n///\n/// @argument {list} $box-edge-values\n///   List of lengths; accepts CSS shorthand.\n///\n/// @example scss\n///   .element {\n///     @include position(relative, 0 null null 10em);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     left: 10em;\n///     position: relative;\n///     top: 0;\n///   }\n///\n/// @example scss\n///   .element {\n///     @include position(absolute, 0);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     position: absolute;\n///     top: 0;\n///     right: 0;\n///     bottom: 0;\n///     left: 0;\n///   }\n///\n/// @require {function} _is-length\n///\n/// @require {function} _unpack-shorthand\n\n@mixin position(\n  $position,\n  $box-edge-values\n) {\n  $box-edge-values: _unpack-shorthand($box-edge-values);\n  $offsets: (\n    top:    nth($box-edge-values, 1),\n    right:  nth($box-edge-values, 2),\n    bottom: nth($box-edge-values, 3),\n    left:   nth($box-edge-values, 4),\n  );\n\n  position: $position;\n\n  @each $offset, $value in $offsets {\n    @if _is-length($value) {\n      #{$offset}: $value;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates vendor prefixes.\n///\n/// @argument {string} $property\n///   Property to prefix.\n///\n/// @argument {string} $value\n///   Value to use.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include prefixer(appearance, none, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     -webkit-appearance: none;\n///     -moz-appearance: none;\n///     appearance: none;\n///   }\n///\n/// @author Hugo Giraudel\n\n@mixin prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{\"-\" + $prefix + \"-\" + $property}: $value;\n  }\n  #{$property}: $value;\n}\n","@charset \"UTF-8\";\n\n/// Mixes a color with black.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of black to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: shade(#ffbb52, 60%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #664a20;\n///   }\n\n@function shade(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `shade` mixin.\";\n  } @else {\n    @return mix(#000, $color, $percent);\n  }\n}\n","@charset \"UTF-8\";\n\n/// Sets the `width` and `height` of the element in one statement.\n///\n/// @argument {number (with unit) | string} $width\n///\n/// @argument {number (with unit) | string} $height [$width]\n///\n/// @example scss\n///   .first-element {\n///     @include size(2em);\n///   }\n///\n///   // CSS Output\n///   .first-element {\n///     width: 2em;\n///     height: 2em;\n///   }\n///\n/// @example scss\n///   .second-element {\n///     @include size(auto, 10em);\n///   }\n///\n///   // CSS Output\n///   .second-element {\n///     width: auto;\n///     height: 10em;\n///   }\n///\n/// @require {function} _is-size\n\n@mixin size(\n  $width,\n  $height: $width\n) {\n  @if _is-size($height) {\n    height: $height;\n  } @else {\n    @error \"`#{$height}` is not a valid length for the `$height` argument \" +\n           \"in the `size` mixin.\";\n  }\n\n  @if _is-size($width) {\n    width: $width;\n  } @else {\n    @error \"`#{$width}` is not a valid length for the `$width` argument \" +\n           \"in the `size` mixin.\";\n  }\n}\n","@charset \"UTF-8\";\n\n/// Strips the unit from a number.\n///\n/// @argument {number} $value\n///\n/// @return {number (unitless)}\n///\n/// @example scss\n///   $dimension: strip-unit(10em);\n///\n///   // Output\n///   $dimension: 10;\n\n@function strip-unit($value) {\n  @return ($value / ($value * 0 + 1));\n}\n","@charset \"UTF-8\";\n\n////\n/// @type list\n///\n/// @require {function} _assign-inputs\n///\n/// @require {variable} $_text-inputs-list\n////\n\n/// A list of all _text-based_ HTML inputs. Please note that you must\n/// interpolate the variable (`#{}`) to use it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs} {\n///     border: 1px solid #ccc;\n///   }\n///\n///   // CSS Output\n///   [type='color'],\n///   [type='date'],\n///   [type='datetime'],\n///   [type='datetime-local'],\n///   [type='email'],\n///   [type='month'],\n///   [type='number'],\n///   [type='password'],\n///   [type='search'],\n///   [type='tel'],\n///   [type='text'],\n///   [type='time'],\n///   [type='url'],\n///   [type='week'],\n///   input:not([type]),\n///   textarea {\n///     border: 1px solid #ccc;\n///   }\n\n$all-text-inputs: _assign-inputs($_text-inputs-list);\n\n/// A list of all _text-based_ HTML inputs with the `:active` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-active} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:active,\n///   [type='date']:active,\n///   [type='datetime']:active,\n///   [type='datetime-local']:active,\n///   [type='email']:active,\n///   [type='month']:active,\n///   [type='number']:active,\n///   [type='password']:active,\n///   [type='search']:active,\n///   [type='tel']:active,\n///   [type='text']:active,\n///   [type='time']:active,\n///   [type='url']:active,\n///   [type='week']:active,\n///   input:not([type]):active,\n///   textarea:active {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-active: _assign-inputs($_text-inputs-list, active);\n\n/// A list of all _text-based_ HTML inputs with the `:focus` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-focus} {\n///     border: 1px solid #1565c0;\n///   }\n///\n///   // CSS Output\n///   [type='color']:focus,\n///   [type='date']:focus,\n///   [type='datetime']:focus,\n///   [type='datetime-local']:focus,\n///   [type='email']:focus,\n///   [type='month']:focus,\n///   [type='number']:focus,\n///   [type='password']:focus,\n///   [type='search']:focus,\n///   [type='tel']:focus,\n///   [type='text']:focus,\n///   [type='time']:focus,\n///   [type='url']:focus,\n///   [type='week']:focus,\n///   input:not([type]):focus,\n///   textarea:focus {\n///     border: 1px solid #1565c0;\n///   }\n\n$all-text-inputs-focus: _assign-inputs($_text-inputs-list, focus);\n\n/// A list of all _text-based_ HTML inputs with the `:hover` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-hover} {\n///     border: 1px solid #aaa;\n///   }\n///\n///   // CSS Output\n///   [type='color']:hover,\n///   [type='date']:hover,\n///   [type='datetime']:hover,\n///   [type='datetime-local']:hover,\n///   [type='email']:hover,\n///   [type='month']:hover,\n///   [type='number']:hover,\n///   [type='password']:hover,\n///   [type='search']:hover,\n///   [type='tel']:hover,\n///   [type='text']:hover,\n///   [type='time']:hover,\n///   [type='url']:hover,\n///   [type='week']:hover,\n///   input:not([type]):hover,\n///   textarea:hover {\n///     border: 1px solid #aaa;\n///   }\n\n$all-text-inputs-hover: _assign-inputs($_text-inputs-list, hover);\n\n/// A list of all _text-based_ HTML inputs with the `:invalid` pseudo-class\n/// applied. Please note that you must interpolate the variable (`#{}`) to use\n/// it as a selector.\n///\n/// @example scss\n///   #{$all-text-inputs-invalid} {\n///     border: 1px solid #00f;\n///   }\n///\n///   // CSS Output\n///   [type='color']:invalid,\n///   [type='date']:invalid,\n///   [type='datetime']:invalid,\n///   [type='datetime-local']:invalid,\n///   [type='email']:invalid,\n///   [type='month']:invalid,\n///   [type='number']:invalid,\n///   [type='password']:invalid,\n///   [type='search']:invalid,\n///   [type='tel']:invalid,\n///   [type='text']:invalid,\n///   [type='time']:invalid,\n///   [type='url']:invalid,\n///   [type='week']:invalid,\n///   input:not([type]):invalid,\n///   textarea:invalid {\n///     border: 1px solid #00f;\n///   }\n\n$all-text-inputs-invalid: _assign-inputs($_text-inputs-list, invalid);\n","@charset \"UTF-8\";\n\n// scss-lint:disable SpaceAfterComma, UnnecessaryMantissa, TrailingZero\n\n////\n/// CSS cubic-bezier timing functions.\n///\n/// @link https://goo.gl/p8u6SK\n///\n/// @type string\n////\n\n$ease-in-quad:      cubic-bezier(0.550,  0.085, 0.680, 0.530);\n$ease-in-cubic:     cubic-bezier(0.550,  0.055, 0.675, 0.190);\n$ease-in-quart:     cubic-bezier(0.895,  0.030, 0.685, 0.220);\n$ease-in-quint:     cubic-bezier(0.755,  0.050, 0.855, 0.060);\n$ease-in-sine:      cubic-bezier(0.470,  0.000, 0.745, 0.715);\n$ease-in-expo:      cubic-bezier(0.950,  0.050, 0.795, 0.035);\n$ease-in-circ:      cubic-bezier(0.600,  0.040, 0.980, 0.335);\n$ease-in-back:      cubic-bezier(0.600, -0.280, 0.735, 0.045);\n\n$ease-out-quad:     cubic-bezier(0.250,  0.460, 0.450, 0.940);\n$ease-out-cubic:    cubic-bezier(0.215,  0.610, 0.355, 1.000);\n$ease-out-quart:    cubic-bezier(0.165,  0.840, 0.440, 1.000);\n$ease-out-quint:    cubic-bezier(0.230,  1.000, 0.320, 1.000);\n$ease-out-sine:     cubic-bezier(0.390,  0.575, 0.565, 1.000);\n$ease-out-expo:     cubic-bezier(0.190,  1.000, 0.220, 1.000);\n$ease-out-circ:     cubic-bezier(0.075,  0.820, 0.165, 1.000);\n$ease-out-back:     cubic-bezier(0.175,  0.885, 0.320, 1.275);\n\n$ease-in-out-quad:  cubic-bezier(0.455,  0.030, 0.515, 0.955);\n$ease-in-out-cubic: cubic-bezier(0.645,  0.045, 0.355, 1.000);\n$ease-in-out-quart: cubic-bezier(0.770,  0.000, 0.175, 1.000);\n$ease-in-out-quint: cubic-bezier(0.860,  0.000, 0.070, 1.000);\n$ease-in-out-sine:  cubic-bezier(0.445,  0.050, 0.550, 0.950);\n$ease-in-out-expo:  cubic-bezier(1.000,  0.000, 0.000, 1.000);\n$ease-in-out-circ:  cubic-bezier(0.785,  0.135, 0.150, 0.860);\n$ease-in-out-back:  cubic-bezier(0.680, -0.550, 0.265, 1.550);\n","@charset \"UTF-8\";\n\n/// Mixes a color with white.\n///\n/// @argument {color} $color\n///\n/// @argument {number (percentage)} $percent\n///   The amount of white to be mixed in.\n///\n/// @return {color}\n///\n/// @example scss\n///   .element {\n///     background-color: tint(#6ecaa6, 40%);\n///   }\n///\n///   // CSS Output\n///   .element {\n///     background-color: #a8dfc9;\n///   }\n\n@function tint(\n  $color,\n  $percent\n) {\n  @if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `tint` mixin.\";\n  } @else {\n    @return mix(#fff, $color, $percent);\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates a triangle pointing in a specified direction.\n///\n/// @argument {string} $direction\n///   The direction the triangle should point. Accepts `up`, `up-right`,\n///   `right`, `down-right`, `down`, `down-left`, `left` or `up-left`.\n///\n/// @argument {number (with unit)} $width\n///   Width of the triangle.\n///\n/// @argument {number (with unit)} $height\n///   Height of the triangle.\n///\n/// @argument {color} $color\n///   Color of the triangle.\n///\n/// @example scss\n///   .element {\n///     &::before {\n///       @include triangle(\"up\", 2rem, 1rem, #b25c9c);\n///       content: \"\";\n///     }\n///   }\n///\n///   // CSS Output\n///   .element::before {\n///     border-style: solid;\n///     height: 0;\n///     width: 0;\n///     border-color: transparent transparent #b25c9c;\n///     border-width: 0 1rem 1rem;\n///     content: \"\";\n///   }\n\n@mixin triangle(\n  $direction,\n  $width,\n  $height,\n  $color\n) {\n  @if not index(\n    \"up\" \"up-right\" \"right\" \"down-right\" \"down\" \"down-left\" \"left\" \"up-left\",\n    $direction\n  ) {\n    @error \"Direction must be `up`, `up-right`, `right`, `down-right`, \" +\n           \"`down`, `down-left`, `left` or `up-left`.\";\n  } @else if not _is-color($color) {\n    @error \"`#{$color}` is not a valid color for the `$color` argument in \" +\n           \"the `triangle` mixin.\";\n  } @else {\n    border-style: solid;\n    height: 0;\n    width: 0;\n\n    @if $direction == \"up\" {\n      border-color: transparent transparent $color;\n      border-width: 0 ($width / 2) $height;\n    } @else if $direction == \"up-right\" {\n      border-color: transparent $color transparent transparent;\n      border-width: 0 $width $width 0;\n    } @else if $direction == \"right\" {\n      border-color: transparent transparent transparent $color;\n      border-width: ($height / 2) 0 ($height / 2) $width;\n    } @else if $direction == \"down-right\" {\n      border-color: transparent transparent $color;\n      border-width: 0 0 $width $width;\n    } @else if $direction == \"down\" {\n      border-color: $color transparent transparent;\n      border-width: $height ($width / 2) 0;\n    } @else if $direction == \"down-left\" {\n      border-color: transparent transparent transparent $color;\n      border-width: $width 0 0 $width;\n    } @else if $direction == \"left\" {\n      border-color: transparent $color transparent transparent;\n      border-width: ($height / 2) $width ($height / 2) 0;\n    } @else if $direction == \"up-left\" {\n      border-color: $color transparent transparent;\n      border-width: $width $width 0 0;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Generates vendor prefixes for values.\n///\n/// @argument {string} $property\n///   Property to use.\n///\n/// @argument {string} $value\n///   Value to prefix.\n///\n/// @argument {list} $prefixes\n///   Vendor prefixes to output.\n///\n/// @example scss\n///   .element {\n///     @include value-prefixer(cursor, grab, (\"webkit\", \"moz\"));\n///   }\n///\n///   // CSS Output\n///   .element {\n///     cursor: -webkit-grab;\n///     cursor: -moz-grab;\n///     cursor: grab;\n///   }\n///\n/// @author Matthew Tobiasz\n\n@mixin value-prefixer(\n  $property,\n  $value,\n  $prefixes: ()\n) {\n  @each $prefix in $prefixes {\n    #{$property}: #{\"-\" + $prefix + \"-\" + $value};\n  }\n  #{$property}: $value;\n}\n","/**\r\nsize\r\n */\r\n$content_md: 1440px;\r\n$content_tb: 768px;\r\n$content_sp: 750px;\r\n\r\n/**\r\ncolor\r\n */\r\n$color_white: rgba(255, 255, 255, 0.85);\r\n$color_black: #000;\r\n//$color_text_black: #535353;\r\n//$color_text_white: #fff;\r\n$color_red: #ce1206;\r\n$color_blue: #6ebbd4;\r\n$color_gray1: #313131;\r\n$color_gray2: #878787;\r\n$color_yellow: yellow;\r\n$color_pink: #ff5865;\r\n\r\n/**\r\nz-index\r\n */\r\n$z-index_under: 0; //裏側\r\n$z-index_put: 5; //position順を守る場合\r\n$z-index_on: 100; //上に表示したい場合\r\n$z-index_over: 300; //コンテンツ最上\r\n$z-index_modal: 500; //コンテンツを多い被す\r\n\r\n/**\r\n\r\n */\r\n$time: 0.4s;\r\n$ease-in: $ease-in-circ;\r\n$ease-out: $ease-out-circ;\r\n$ease-in-out: $ease-in-out-circ;\r\n","html, :root {\r\n\tcolor: $color_black;\r\n\tbackground-color: $color_white;\r\n\tbox-sizing: border-box;\r\n\t-ms-text-size-adjust: 100%;\r\n\t-webkit-text-size-adjust: 100%;\r\n\tfont-family: \"Noto Sans\", sans-serif;\r\n\r\n\t@include mq-pc {\r\n\t\tfont-size: 24px;\r\n\t}\r\n\t@include mq-sp {\r\n\t\tfont-size: 24px;\r\n\t}\r\n}\r\n\r\nbody {\r\n\t@include mq-pc {\r\n\t\tfont-size: 16px;\r\n\t\tline-height: 1.4;\r\n\t}\r\n\t@include mq-sp {\r\n\t\tfont-size: 13px;\r\n\t\tline-height: 1.4;\r\n\t}\r\n}\r\n\r\n* {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n}\r\n\r\n*,\r\n::before,\r\n::after {\r\n\tbox-sizing: inherit;\r\n}\r\n\r\nimg {\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\theight: auto;\r\n}\r\n\r\nbutton {\r\n\tbackground: none;\r\n\tborder: 0;\r\n\tcursor: pointer;\r\n\toutline: 0;\r\n\t&:focus {\r\n\t\toutline: inherit;\r\n\t}\r\n}\r\n\r\na {\r\n\ttext-decoration: none;\r\n\tcolor: inherit;\r\n\tword-wrap: break-word;\r\n}\r\n\r\nul,ol{\r\n\tlist-style: none;\r\n}\r\n\r\n// ----- ----- ----- ----- font style\r\n\r\nh3 {\r\n\tfont-weight: bolder;\r\n}\r\n\r\nh4 {\r\n\tfont-weight: bolder;\r\n}\r\n\r\np {\r\n}\r\n\r\na {\r\n\tfont-weight: bolder;\r\n}\r\n\r\nem {\r\n\tfont-weight: bolder;\r\n}\r\n",".main-visual {\r\n\tpadding: 0;\r\n\r\n\t.body{\r\n\t\twidth: 100%;\r\n\t\theight: 20rem;\r\n\t\tbackground: url(\"https://placehold.jp/150x150.png\")\r\n\t\tcenter center / cover no-repeat;\r\n\r\n\t\th2{\r\n\t\t\tdisplay: none;\r\n\t\t}\r\n\t}\r\n}",".pick-up-news {\r\n\tbackground: white;\r\n\tmargin-top: 0px;\r\n\tborder: 0;\r\n\t.inner{\r\n\t\tborder: 0;\r\n\t\tul {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-around;\r\n\t\t\tflex-wrap: wrap;\r\n\t\t\tli {\r\n\t\t\t\t@include mq-pc {\r\n\t\t\t\t\twidth: calc(100% / 4 - 0.5rem);\r\n\t\t\t\t}\r\n\t\t\t\t@include mq-sp {\r\n\t\t\t\t\twidth: calc(100% / 2 - 0.5rem);\r\n\t\t\t\t}\r\n\t\t\t\t.thumb {\r\n\t\t\t\t\timg {\r\n\t\t\t\t\t\t//border: 2px solid blue;\r\n\t\t\t\t\t\tborder: 0;\r\n\t\t\t\t\t\tbox-shadow: 0 0 5px gray ;\r\n\t\t\t\t\t\t//border-radius: 50%;\r\n\t\t\t\t\t\tcursor: pointer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t.lead {\r\n\t\t\t\t\tcolor: green;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}",".main-contents {\r\n  .inner{\r\n    border: 0;\r\n    .vision{\r\n      margin-top: 3rem;\r\n      margin-bottom: 3rem;\r\n      width: 100%;\r\n      height: 12rem;\r\n      background-image: url(\"https://placehold.jp/150x150.png\");\r\n      background-position-x: center;\r\n      background-position-y: center;\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      display: flex;\r\n      align-items: center;\r\n      text-align: center;\r\n      justify-content: center;\r\n\r\n      .body{\r\n\r\n        h4{\r\n          display: none;\r\n        }\r\n\r\n        img[src=\"https://placehold.jp/150x150.png\"]{\r\n          width: 100%;\r\n          height: 4rem;\r\n          margin-bottom: 0.5rem;\r\n        }\r\n\r\n        .lead{\r\n          color: white;\r\n          font-size: 0.5rem;\r\n          font-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n        }\r\n      }\r\n    }\r\n\r\n    .activity{\r\n      margin-top: 3rem;\r\n      margin-bottom: 3rem;\r\n      width: 100%;\r\n      height: 12rem;\r\n      background-image: url(\"https://placehold.jp/150x150.png\");\r\n      background-position-x: center;\r\n      background-position-y: center;\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      display: flex;\r\n      align-items: center;\r\n      text-align: center;\r\n      justify-content: center;\r\n\r\n      .body{\r\n\r\n        h4{\r\n          display: none;\r\n        }\r\n\r\n        .leadtitle{\r\n          color: white;\r\n          font-size: 2rem;\r\n          font-family: 'Tsukushi A Round Gothic', \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n        }\r\n        .leadsub{\r\n          color: white;\r\n          font-size: 0.5rem;\r\n          font-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n          margin-bottom: 0.5rem;\r\n        }\r\n        .lead{\r\n          color: white;\r\n          font-size: 0.5rem;\r\n          font-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n        }\r\n      }\r\n    }\r\n\r\n    .suport{\r\n      margin-top: 3rem;\r\n      margin-bottom: 3rem;\r\n      width: 100%;\r\n      height: 12rem;\r\n      background-image: url(\"https://placehold.jp/150x150.png\");\r\n      background-position-x: center;\r\n      background-position-y: center;\r\n      background-size: cover;\r\n      background-repeat: no-repeat;\r\n      display: flex;\r\n      align-items: center;\r\n      text-align: center;\r\n      justify-content: center;\r\n\r\n      .body{\r\n\r\n        h4{\r\n          display: none;\r\n        }\r\n\r\n        .leadtitle{\r\n          color: white;\r\n          font-size: 2rem;\r\n          font-family: 'Tsukushi A Round Gothic', \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n        }\r\n        .leadsub{\r\n          color: white;\r\n          font-size: 0.5rem;\r\n          font-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n          margin-bottom: 0.5rem;\r\n        }\r\n        .lead{\r\n          color: white;\r\n          font-size: 0.5rem;\r\n          font-family: \"Yu Gothic Medium\", \"游ゴシック Medium\", YuGothic, \"游ゴシック体\", \"ヒラギノ角ゴ Pro W3\", \"メイリオ\", sans-serif;\r\n          //font-style: normal;\r\n          //font-variant: normal;\r\n          //font-weight: normal;\r\n          //line-height: normal;\r\n          //white-space: normal;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}"],"names":[],"mappings":"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"}